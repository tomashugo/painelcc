from django.core.wsgi import get_wsgi_application
from datetime import datetime, timedelta, tzinfo
import os, sys
import math

if __name__ == "__main__":
   os.environ.setdefault("DJANGO_SETTINGS_MODULE","painelcc.settings")
   application = get_wsgi_application()

   from analysis.models import Billing, Inspection, RelatorioAlteracoesMedidor, RelatorioCorrenteZerada, RelatorioTensaoZerada, RelatorioMMVersusConsumo, RelatorioQuedaDeConsumo
   from mm.models import Consumer, Mm, Quantity, MeterHistory, History, Change
   from django.db.models import Q

   consumers = Consumer.objects.all()

   meses = []

   inicio = datetime.strptime("01/01/2016","%d/%m/%Y")
   agora  = datetime.now()
   #agora = datetime.strptime("01/07/2016","%d/%m/%Y")

   while inicio.month != agora.month or inicio.year != agora.year:
      meses.append(inicio)

      if inicio.month == 12:
         inicio = inicio.replace(month = 1)
         inicio = inicio.replace(year = inicio.year + 1)
      else:
         inicio = inicio.replace(month = inicio.month + 1)

   for cons in consumers:
      mes_fat = []
      fat = []

      for mes in meses:
         billings = Billing.objects.all().filter(consumer=cons).filter(reference = mes)

         faturado = 0

         for bill in billings:
            faturado = faturado+bill.billed

         if len(billings) > 0:
            #print mes.strftime("%d/%m/%Y") + "\t" + str(faturado)
            mes_fat.append(mes)
            fat.append(faturado)

      qnt = len(fat)

      if qnt > 4:
         consumo_ultimo_mes = fat[qnt-1]                
   
         media_tres = 0
 
         indice = qnt-2
    
         while indice > qnt-5 and indice > 0:
            media_tres = media_tres + fat[indice]
            indice = indice-1
         
         media_tres = media_tres/3

         if consumo_ultimo_mes < 0.7*media_tres: 
            a = RelatorioQuedaDeConsumo.objects.all().filter(consumer=cons).filter(referencia=mes_fat[len(mes_fat)-1]).filter(media_consumo=media_tres).filter(consumo_referencia=consumo_ultimo_mes)

            if len(a) == 0:
               relatorio = RelatorioQuedaDeConsumo()
              
               relatorio.consumer = cons
               relatorio.referencia=mes_fat[len(mes_fat)-1]
               relatorio.media_consumo = media_tres
	       relatorio.consumo_referencia = consumo_ultimo_mes
               relatorio.justificado = False
               relatorio.save()



         

         
